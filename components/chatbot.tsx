"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/IulTrRzZnZy
 */
import { Button } from "@/components/ui/button";
import {
  SelectValue,
  SelectTrigger,
  SelectItem,
  SelectContent,
  Select,
} from "@/components/ui/select";
import Image from "next/image";
import { useChat } from "ai/react";
import { useState } from "react";
import { format } from "date-fns";

export function Chatbot() {
  const {
    messages,
    isLoading,
    input,
    handleInputChange,
    handleSubmit,
    setMessages,
    reload,
  } = useChat();

  const [accent, setAccent] = useState("");

  function handleAccentChange(newAccent: string) {
    setAccent(newAccent);
    setMessages([
      {
        id: "1",
        role: "system",
        content: `eres un chatbot asistente que responde con expresiones y modimos del acento ${newAccent}`,
      },
    ]);
    reload();
  }

  const handleKeyDown = (event: any) => {
    if (event.key === "Enter" && !event.shiftKey) {
      event.preventDefault();
      handleSubmit(event);
    }
  };

  return (
    <section key="1" className="w-full h-screen bg-gray-50 flex flex-col">
      <header className="flex justify-between items-center p-4 bg-white shadow-md border-b border-gray-300">
        <div className="flex items-center space-x-2">
          <Image
            className="rounded-full"
            src="/latamTalk.png"
            alt="logo"
            width="48"
            height="48"
          />
          <h1 className="text-lg text-black font-bold">Latam Talk</h1>
        </div>
        <div className="flex items-center space-x-4 w-52">
          <Select
            className="w-full"
            value={accent}
            onValueChange={(e) => handleAccentChange(e)}
            disabled={isLoading}
          >
            <SelectTrigger className="w-full">
              <svg
                className=" h-5 w-5"
                fill="none"
                height="24"
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                viewBox="0 0 24 24"
                width="24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path d="M8 10h8M8 14h8M8 18h8" />
              </svg>
              <SelectValue placeholder="Selecciona un acento" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="paisa">🇨🇴 Paisa</SelectItem>
              <SelectItem value="rolo">🇨🇴 Rolo</SelectItem>
              <SelectItem value="valluno">🇨🇴 Valluno</SelectItem>
              <SelectItem value="costeño">🇨🇴 Costeño</SelectItem>
              <SelectItem value="porteño">🇦🇷 Porteño</SelectItem>
              <SelectItem value="patagonico">🇦🇷 Patagónico</SelectItem>
              <SelectItem value="chilango">🇲🇽 Chilango</SelectItem>
              <SelectItem value="yucateco">🇲🇽 Yucateco</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </header>
      <div className="flex-grow overflow-auto p-4 space-y-4 flex flex-col bg-gray-100">
        {messages
          .filter((message) => message.role !== "system")
          .map((message) => (
            <div
              className={`p-4 rounded-lg shadow ${
                message.role === "assistant"
                  ? "bg-blue-200 self-start"
                  : "bg-green-200 self-end"
              }`}
              key={message.id}
            >
              <p className="text-gray-800">{message.content}</p>
              <p className="text-xs text-gray-600 mt-2">
                {format(message.createdAt!, "MMM d, yyyy, h:mm a")}
              </p>
            </div>
          ))}
      </div>
      <div className="border-t border-gray-300 p-4 bg-white flex justify-center">
        <form
          className="flex space-x-2 items-center w-full justify-center border border-gray-300 rounded-full h-12 relative"
          onSubmit={handleSubmit}
        >
          <input
            className="flex-grow rounded-full bg-transparent text-gray-900 py-3 px-4 pr-14"
            placeholder="Escribe tu mensaje aquí..."
            type="text"
            value={input}
            onChange={handleInputChange}
            onKeyDown={handleKeyDown}
          />
          <Button
            className="w-12 h-12 bg-black text-white rounded-full hover:bg-black/80 absolute right-0"
            type="submit"
            disabled={isLoading}
          >
            {isLoading ? (
              <svg
                className=" animate-spin h-5 w-5 text-gray-800"
                fill="none"
                height="24"
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                viewBox="0 0 24 24"
                width="24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <line x1="12" x2="12" y1="2" y2="6" />
                <line x1="12" x2="12" y1="18" y2="22" />
                <line x1="4.93" x2="7.76" y1="4.93" y2="7.76" />
                <line x1="16.24" x2="19.07" y1="16.24" y2="19.07" />
                <line x1="2" x2="6" y1="12" y2="12" />
                <line x1="18" x2="22" y1="12" y2="12" />
                <line x1="4.93" x2="7.76" y1="19.07" y2="16.24" />
                <line x1="16.24" x2="19.07" y1="7.76" y2="4.93" />
              </svg>
            ) : (
              <svg
                className=" h-10 w-10"
                fill="none"
                height="24"
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                viewBox="0 0 24 24"
                width="24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path d="m22 2-7 20-4-9-9-4Z" />
                <path d="M22 2 11 13" />
              </svg>
            )}
          </Button>
        </form>
      </div>
    </section>
  );
}
